public class CircularlyLinkedList<T> {
	private Node<T> start;

	public CircularlyLinkedList() {
		start = null;
	}

	public boolean isEmpty() {
		return start == null;
	}

	public void add(T data){
		Node<T> n = new Node<T>(data);
		if(isEmpty()){
			start = n;
			start.next = start;
		}
		else{
			start.next = new Node<T>(data, start.next)
		}
	}

	public class Node<T> {
		private Node<T> next;
		private T data;

		public Node(T data) {
			next = null;
			this.data = data;
		}

		public Node(T data, Node<T> next) {
			this.data = data;
			this.next = next;
		}

		public T getData() {
			return data;
		}

		public void setNext(Node<T> next) {
			this.next = next;
		}

		public Node<T> getNext() {
			return next;
		}

	}
}
