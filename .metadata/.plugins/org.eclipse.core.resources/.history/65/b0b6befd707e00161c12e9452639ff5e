
public class BinaryTree<T> {

	private TreeNode<T> root;

	public BinaryTree() {
		root = null;
	}

	public boolean isEmpty() {
		return root == null;
	}

	public void insert(T data) {
		root = insert(root, data);
	}

	private TreeNode<T> insert(TreeNode<T> tn, T data) {
		if (tn == null) {
			tn = new TreeNode<T>(data);
		} else {
			if (tn.getRight() == null) {
				tn.right = insert(tn.right, data);
			} else {
				tn.left = insert(tn.left, data);
			}
		}
			return tn;
	}
	
	public int getNodeCount(){
		return getNodeCount(root);
	}
	
	private int getNodeCount(TreeNode<T> tn){
		if(tn == null){
			return 0;
		}
		else{
			int l = 1;
			l += getNodeCount(tn.getLeft());
			l += getNodeCount(tn.getRight());
			return l;
		}
	}
}
